/*
 * The contents of this file are subject to the OpenMRS Public License
 * Version 1.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://license.openmrs.org
 *
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations
 * under the License.
 *
 * Copyright (C) OpenMRS, LLC.  All Rights Reserved.
 */
package org.openmrs.module.eptsreports.reporting.library.queries.data.quality;

public class Ec15Queries {

  /**
   * Get the query for EC15 patient listing
   *
   * @return String
   */
  public static String getEc15CombinedQuery() {
    String query =
        "SELECT  "
            + "f_ec15.patient_id patient_id, "
            + "f_ec15.Name  Name, "
            + "DATE_FORMAT(date(f_ec15.birthdate), '%d/%m/%Y') as birthdate, "
            + "f_ec15.Estimated_dob Estimated_dob, "
            + "f_ec15.Sex Sex, "
            + "DATE_FORMAT(date(f_ec15.First_entry_date), '%d/%m/%Y') as First_entry_date, "
            + "DATE_FORMAT(date(f_ec15.Last_updated), '%d/%m/%Y') as Last_updated, "
            + "DATE_FORMAT(date(f_ec15.date_enrolled), '%d/%m/%Y') as date_enrolled, "
            + "f_ec15.state state, "
            + "DATE_FORMAT(date(f_ec15.state_date), '%d/%m/%Y') as state_date, "
            + "DATE_FORMAT(date(f_ec15.encounter_date_fila), '%d/%m/%Y') as encounter_date_fila, "
            + "DATE_FORMAT(date(f_ec15.encounter_date_created_fila), '%d/%m/%Y') as encounter_date_created_fila, "
            + "DATE_FORMAT(date(f_ec15.encounter_datetime), '%d/%m/%Y') as encounter_datetime, "
            + "DATE_FORMAT(date(f_ec15.data_encounter_recepcao), '%d/%m/%Y') as data_encounter_recepcao, "
            + "DATE_FORMAT(date(f_ec15.data_encounter_recepcao), '%d/%m/%Y') as date_created, "
            + "f_ec15.location_name location_name, f_ec15.NID NID FROM ( "
            + "SELECT pe.person_id as patient_id,  "
            + "pid.identifier AS NID, "
            + "concat(ifnull(pn.given_name,''),' ',ifnull(pn.middle_name,''),' ',ifnull(pn.family_name,'')) AS Name, "
            + "DATE_FORMAT(pe.birthdate, '%d/%m/%Y') AS birthdate, "
            + "IF(pe.birthdate_estimated = 1, 'Sim','NÃ£o') AS Estimated_dob, "
            + "pe.gender AS Sex, "
            + "DATE_FORMAT(pe.date_created, '%d/%m/%Y') AS First_entry_date, "
            + "DATE_FORMAT(pe.date_changed, '%d/%m/%Y') AS Last_updated, "
            + "DATE_FORMAT(pg.date_enrolled, '%d/%m/%Y') AS date_enrolled, "
            + "case "
            + " when ps.state = 9 then 'ABANDONO' "
            + " when ps.state = 6 then 'ACTIVO NO PROGRAMA' "
            + " when ps.state = 10 then 'OBITOU' "
            + " when ps.state = 8 then 'SUSPENDER TRATAMENTO' "
            + " when ps.state = 7 then 'TRANSFERIDO PARA' "
            + " when ps.state = 29 then 'TRANSFERIDO DE' "
            + "end AS state, "
            + "DATE_FORMAT(ps.start_date, '%d/%m/%Y') AS state_date, "
            + "MIN(DATE_FORMAT(fila.encounter_datetime, '%d/%m/%Y')) AS encounter_date_fila, "
            + "DATE_FORMAT(fila.date_created, '%d/%m/%Y') AS encounter_date_created_fila, "
            + "IF(pe.birthdate<date(recepcao.encounter_datetime) ,'',DATE_FORMAT(recepcao.encounter_datetime, '%d/%m/%Y')) AS encounter_datetime, "
            + "IF(pe.birthdate<date(recepcao.dataFichaRecepcao),'', DATE_FORMAT(recepcao.dataFichaRecepcao, '%d/%m/%Y')) AS data_encounter_recepcao, "
            + "IF(pe.birthdate<date(recepcao.date_created),'',DATE_FORMAT(recepcao.date_created, '%d/%m/%Y')) AS date_created, "
            + "l.name AS location_name FROM person pe  "
            + "left join "
            + "( select pid1.* from patient_identifier pid1 "
            + "inner join ( "
            + "select patient_id,min(patient_identifier_id) id from patient_identifier "
            + "where voided=0 "
            + "group by patient_id "
            + ") pid2 "
            + "where pid1.patient_id=pid2.patient_id and pid1.patient_identifier_id=pid2.id "
            + ") pid on pid.patient_id=pe.person_id "
            + "left join (select pn1.* from person_name pn1 "
            + "inner join ( "
            + "select person_id,min(person_name_id) id from person_name "
            + "where voided=0 "
            + "group by person_id "
            + ") pn2 "
            + "where pn1.person_id=pn2.person_id and pn1.person_name_id=pn2.id "
            + ") pn on pn.person_id=pe.person_id "
            + "left join ( "
            + "Select p.patient_id, e.encounter_datetime, l.name  location_name, e.date_created from patient p "
            + "inner join encounter e on p.patient_id = e.patient_id "
            + "inner join location l on l.location_id = e.location_id "
            + "where p.voided = 0 and e.voided = 0 and e.encounter_type = 18 and e.location_id IN (:location) "
            + ") fila on fila.patient_id = pe.person_id "
            + "left join ( "
            + "SELECT  p.patient_id, o.value_datetime encounter_datetime, e.encounter_datetime dataFichaRecepcao, l.name location_name, e.date_created date_created FROM  patient p "
            + "INNER JOIN encounter e on p.patient_id = e.patient_id  "
            + "inner join obs o on e.encounter_id = o.encounter_id "
            + "inner join location l on l.location_id = e.location_id "
            + "where p.voided = 0 and e.voided = 0 and o.voided = 0 and e.encounter_type = 52 "
            + "AND o.concept_id = 23866 and o.value_datetime is not null and e.location_id IN (:location) "
            + "AND o.value_datetime between :startDate and :endDate  "
            + ") recepcao  on recepcao.patient_id = pe.person_id "
            + "left join  patient_program pg ON pe.person_id = pg.patient_id and pg.program_id = 2 and pg.location_id IN (:location) "
            + "	LEFT JOIN ( "
            + " select max_estado.patient_id, max_estado.start_date, ps.state "
            + "	from( "
            + "			select pp.patient_id, max(max_estado.start_date) start_date,ps.patient_state_id,ps.state "
            + "			from( "
            + "				select pg.patient_id, ps.start_date,ps.voided,ps.state "
            + "				from patient p "
            + "						inner join patient_program pg on p.patient_id = pg.patient_id "
            + "				  	inner join patient_state ps on pg.patient_program_id = ps.patient_program_id "
            + "				where pg.voided=0  and p.voided=0 and  pg.program_id = 2 and ps.voided=0 "
            + "					and ps.start_date  <= :endDate  and pg.location_id=:location "
            + "                    order by pg.patient_id, ps.patient_state_id desc, ps.start_date desc "
            + "			)max_estado "
            + "				inner join patient_program pp on pp.patient_id = max_estado.patient_id "
            + "			 	inner join patient_state ps on ps.patient_program_id = pp.patient_program_id and ps.start_date = max_estado.start_date and max_estado.state=ps.state "
            + "	  		where pp.program_id = 2 and pp.voided = 0 and ps.voided = 0 and pp.location_id=:location "
            + "			group by pp.patient_id "
            + "	) max_estado "
            + "	inner join patient_state ps on ps.patient_state_id =max_estado.patient_state_id "
            + "	inner join patient_program pp on pp.patient_program_id = ps.patient_program_id "
            + "	) AS ps ON pe.person_id = ps.patient_id "
            + "left join location l on l.location_id=pg.location_id "
            + "where pe.voided = 0 and (pe.person_id is not null) and ((fila.encounter_datetime<pe.birthdate) OR (recepcao.encounter_datetime<pe.birthdate )) "
            + " GROUP BY pe.person_id "
            + ") f_ec15 "
            + "GROUP BY f_ec15.patient_id ";
    return query;
  }

  public static String getEc15Total() {
    String query =
        "SELECT pe.person_id as patient_id FROM person pe "
            + "left join "
            + "( select pid1.* from patient_identifier pid1 "
            + "inner join ( "
            + "select patient_id,min(patient_identifier_id) id from patient_identifier "
            + "where voided=0 "
            + "group by patient_id "
            + ") pid2 "
            + "where pid1.patient_id=pid2.patient_id and pid1.patient_identifier_id=pid2.id "
            + ") pid on pid.patient_id=pe.person_id "
            + "left join (select pn1.* from person_name pn1 "
            + "inner join ( "
            + "select person_id,min(person_name_id) id from person_name "
            + "where voided=0 "
            + "group by person_id "
            + ") pn2 "
            + "where pn1.person_id=pn2.person_id and pn1.person_name_id=pn2.id "
            + ") pn on pn.person_id=pe.person_id "
            + "left join ( "
            + "Select p.patient_id, e.encounter_datetime, l.name  location_name, e.date_created from patient p "
            + "inner join encounter e on p.patient_id = e.patient_id "
            + "inner join location l on l.location_id = e.location_id "
            + "where p.voided = 0 and e.voided = 0 and e.encounter_type = 18 and e.location_id IN (:location) "
            + ") fila on fila.patient_id = pe.person_id "
            + "left join ( "
            + "SELECT  p.patient_id, o.value_datetime encounter_datetime, e.encounter_datetime dataFichaRecepcao, l.name location_name, e.date_created date_created FROM  patient p "
            + "INNER JOIN encounter e on p.patient_id = e.patient_id  "
            + "inner join obs o on e.encounter_id = o.encounter_id "
            + "inner join location l on l.location_id = e.location_id "
            + "where p.voided = 0 and e.voided = 0 and o.voided = 0 and e.encounter_type = 52 "
            + "AND o.concept_id = 23866 and o.value_datetime is not null and e.location_id IN (:location) "
            + "AND o.value_datetime between :startDate and :endDate  "
            + ") recepcao  "
            + "on recepcao.patient_id = pe.person_id "
            + "left join  patient_program pg ON pe.person_id = pg.patient_id and pg.program_id = 2 and pg.location_id IN (:location) "
            + "	LEFT JOIN ( "
            + " select max_estado.patient_id, max_estado.start_date, ps.state "
            + "	from( "
            + "			select pp.patient_id, max(max_estado.start_date) start_date,ps.patient_state_id,ps.state "
            + "			from( "
            + "				select pg.patient_id, ps.start_date,ps.voided,ps.state "
            + "				from patient p "
            + "						inner join patient_program pg on p.patient_id = pg.patient_id "
            + "				  	inner join patient_state ps on pg.patient_program_id = ps.patient_program_id "
            + "				where pg.voided=0  and p.voided=0 and  pg.program_id = 2 and ps.voided=0 "
            + "					and ps.start_date  <= :endDate  and pg.location_id=:location "
            + "                    order by pg.patient_id, ps.patient_state_id desc, ps.start_date desc "
            + "			)max_estado "
            + "				inner join patient_program pp on pp.patient_id = max_estado.patient_id "
            + "			 	inner join patient_state ps on ps.patient_program_id = pp.patient_program_id and ps.start_date = max_estado.start_date and max_estado.state=ps.state "
            + "	  		where pp.program_id = 2 and pp.voided = 0 and ps.voided = 0 and pp.location_id=:location "
            + "			group by pp.patient_id "
            + "	) max_estado "
            + "	inner join patient_state ps on ps.patient_state_id =max_estado.patient_state_id "
            + "	inner join patient_program pp on pp.patient_program_id = ps.patient_program_id "
            + "	) AS ps ON pe.person_id = ps.patient_id "
            + "left join location l on l.location_id=pg.location_id "
            + "where pe.voided = 0 and (pe.person_id is not null) and ((fila.encounter_datetime<pe.birthdate) OR (recepcao.encounter_datetime<pe.birthdate )) "
            + " GROUP BY pe.person_id ";

    return query;
  }
}
