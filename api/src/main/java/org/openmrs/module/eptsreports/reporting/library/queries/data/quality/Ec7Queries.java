/*
 * The contents of this file are subject to the OpenMRS Public License
 * Version 1.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://license.openmrs.org
 *
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations
 * under the License.
 *
 * Copyright (C) OpenMRS, LLC.  All Rights Reserved.
 */
package org.openmrs.module.eptsreports.reporting.library.queries.data.quality;

public class Ec7Queries {

  /**
   * Get the query to be used to display the EC7 patient listing
   *
   * @return String
   */
  public static String getEc7CombinedQuery() {
    String query =
        "SELECT f_ec7.patient_id patient_id, "
            + " f_ec7.NID NID, "
            + " f_ec7.Name  Name, "
            + " f_ec7.birthdate birthdate, "
            + " f_ec7.Estimated_dob Estimated_dob, "
            + " f_ec7.Sex Sex, "
            + " f_ec7.First_entry_date First_entry_date, "
            + " f_ec7.Last_updated Last_updated, "
            + " f_ec7.date_enrolled date_enrolled, "
            + " f_ec7.state state, "
            + " f_ec7.state_date state_date, "
            + " f_ec7.encounter_date encounter_date, "
            + " f_ec7.encounter_date_created encounter_date_created, "
            + " f_ec7.location_name location_name FROM "
            + " ( "
            + " "
            + " SELECT  transferido_para.patient_id as patient_id, "
            + " pid.identifier AS NID, "
            + " concat(ifnull(pn.given_name,''),' ',ifnull(pn.middle_name,''),' ',ifnull(pn.family_name,'')) AS Name, "
            + " DATE_FORMAT(pe.birthdate, '%d/%m/%Y') AS birthdate, "
            + " IF(pe.birthdate_estimated = 1, 'Yes','No') AS Estimated_dob, "
            + " pe.gender AS Sex, "
            + " DATE_FORMAT(pe.date_created, '%d/%m/%Y') AS First_entry_date, "
            + " DATE_FORMAT(pe.date_changed, '%d/%m/%Y') AS Last_updated, "
            + " DATE_FORMAT(pg.date_enrolled, '%d/%m/%Y') AS date_enrolled, "
            + " case "
            + " when ps.state = 9 then 'ABANDONO' "
            + " when ps.state = 6 then 'ACTIVO NO PROGRAMA' "
            + " when ps.state = 10 then 'OBITOU' "
            + " when ps.state = 8 then 'SUSPENDER TRATAMENTO' "
            + " when ps.state = 7 then 'TRANSFERIDO PARA' "
            + " when ps.state = 29 then 'TRANSFERIDO DE' "
            + " end AS state, "
            + " DATE_FORMAT(ps.start_date, '%d/%m/%Y') AS state_date, "
            + " MIN(DATE_FORMAT(Seguimento.encounter_datetime, '%d/%m/%Y')) AS encounter_date, "
            + " DATE_FORMAT(Seguimento.date_created, '%d/%m/%Y') AS encounter_date_created, "
            + " l.name AS location_name "
            + " from "
            + "( "
            + "SELECT "
            + "    pp.patient_id, "
            + "    ps.start_date AS data_transferido_para "
            + "FROM "
            + "    patient_program pp "
            + "JOIN patient_state ps ON ps.patient_program_id = pp.patient_program_id "
            + "JOIN ( "
            + "    SELECT "
            + "        pg.patient_id, "
            + "        MAX(ps.start_date) AS max_data_transferido_para "
            + "    FROM "
            + "        patient_program pg "
            + "    JOIN patient_state ps ON ps.patient_program_id = pg.patient_program_id "
            + "    WHERE "
            + "        pg.voided = 0 "
            + "        AND ps.voided = 0 "
            + "        AND pg.program_id = 2 "
            + "        AND pg.location_id=:location "
            + "        AND ps.start_date <= :endDate "
            + "        AND ps.end_date is null "
            + "    GROUP BY "
            + "        pg.patient_id "
            + ") latest ON latest.patient_id = pp.patient_id AND ps.start_date = latest.max_data_transferido_para "
            + "WHERE "
            + "    pp.voided = 0 "
            + "    AND ps.voided = 0 "
            + "    AND pp.program_id = 2 "
            + "    AND pp.location_id=:location "
            + "    AND ps.state = 7 "
            + "	AND ps.start_date <= :endDate "
            + "    AND ps.end_date is null "
            + ") transferido_para "
            + "left join "
            + "( "
            + "Select p.patient_id, max(e.encounter_datetime) encounter_datetime from  patient p "
            + "inner join encounter e on p.patient_id = e.patient_id "
            + "where p.voided = 0 and e.voided = 0 and e.encounter_type in(6,9) and e.location_id=:location "
            + "AND e.encounter_datetime between :startDate AND :endDate "
            + "group by p.patient_id "
            + ") seguimento on seguimento.patient_id = transferido_para.patient_id "
            + " "
            + "left join "
            + "( "
            + "select pid1.* from patient_identifier pid1 "
            + "inner join "
            + "( "
            + "select patient_id,min(patient_identifier_id) id from patient_identifier "
            + "where voided=0 "
            + "group by patient_id "
            + ") pid2 "
            + "where pid1.patient_id=pid2.patient_id and pid1.patient_identifier_id=pid2.id "
            + ") pid on pid.patient_id=transferido_para.patient_id "
            + "left join "
            + "( "
            + "select pn1.* from person_name pn1 "
            + "inner join "
            + "( "
            + "select person_id,min(person_name_id) id from person_name "
            + "where voided=0 "
            + "group by person_id "
            + ") pn2 "
            + "where pn1.person_id=pn2.person_id and pn1.person_name_id=pn2.id "
            + ") pn on pn.person_id=transferido_para.patient_id "
            + "left join "
            + "( "
            + "SELECT "
            + "    latest_state.patient_id, "
            + "    ps_final.start_date, "
            + "    ps_final.state "
            + "FROM ( "
            + "    SELECT "
            + "        pg.patient_id, "
            + "        MAX(ps.start_date) AS max_start_date "
            + "    FROM patient p "
            + "    INNER JOIN patient_program pg ON p.patient_id = pg.patient_id "
            + "    INNER JOIN patient_state ps ON pg.patient_program_id = ps.patient_program_id "
            + "    WHERE "
            + "        p.voided = 0 "
            + "        AND pg.voided = 0 "
            + "        AND ps.voided = 0 "
            + "        AND pg.program_id = 2 "
            + "        AND pg.location_id=:location "
            + "        AND ps.start_date <= :endDate "
            + "    GROUP BY pg.patient_id "
            + ") latest_state "
            + "INNER JOIN patient_program pg ON pg.patient_id = latest_state.patient_id "
            + "INNER JOIN patient_state ps_final ON ps_final.patient_program_id = pg.patient_program_id "
            + "    AND ps_final.start_date = latest_state.max_start_date "
            + "WHERE "
            + "    pg.voided = 0 "
            + "    AND pg.program_id = 2 "
            + "    AND pg.location_id=:location "
            + "    AND ps_final.voided = 0 "
            + ") AS ps ON transferido_para.patient_id = ps.patient_id "
            + "    inner join person pe on pe.person_id=transferido_para.patient_id "
            + "    left join  patient_program pg ON transferido_para.patient_id = pg.patient_id and pg.program_id = 2 "
            + "    left join encounter Seguimento on Seguimento.patient_id=seguimento.patient_id and Seguimento.encounter_datetime=seguimento.encounter_datetime and Seguimento.encounter_type in(6,9) "
            + "    left join location l on l.location_id=pid.location_id "
            + "    where (seguimento.encounter_datetime>transferido_para.data_transferido_para) "
            + "    group by transferido_para.patient_id "
            + ") f_ec7 ";

    return query;
  }

  public static String getEc7Total() {
    String query =
        "SELECT f_ec7.patient_id as patient_id FROM (  "
            + " select  transferido_para.patient_id as patient_id, "
            + " pid.identifier AS NID, "
            + " concat(ifnull(pn.given_name,''),' ',ifnull(pn.middle_name,''),' ',ifnull(pn.family_name,'')) AS Name, "
            + " DATE_FORMAT(pe.birthdate, '%d/%m/%Y') AS birthdate, "
            + " IF(pe.birthdate_estimated = 1, 'Yes','No') AS Estimated_dob, "
            + " pe.gender AS Sex, "
            + " DATE_FORMAT(pe.date_created, '%d/%m/%Y') AS First_entry_date, "
            + " DATE_FORMAT(pe.date_changed, '%d/%m/%Y') AS Last_updated, "
            + " DATE_FORMAT(pg.date_enrolled, '%d/%m/%Y') AS date_enrolled, "
            + " case "
            + " when ps.state = 9 then 'ABANDONO' "
            + " when ps.state = 6 then 'ACTIVO NO PROGRAMA' "
            + " when ps.state = 10 then 'OBITOU' "
            + " when ps.state = 8 then 'SUSPENDER TRATAMENTO' "
            + " when ps.state = 7 then 'TRANSFERIDO PARA' "
            + " when ps.state = 29 then 'TRANSFERIDO DE' "
            + " end AS state, "
            + " DATE_FORMAT(ps.start_date, '%d/%m/%Y') AS state_date, "
            + " MIN(DATE_FORMAT(Seguimento.encounter_datetime, '%d/%m/%Y')) AS encounter_date, "
            + " DATE_FORMAT(Seguimento.date_created, '%d/%m/%Y') AS encounter_date_created, "
            + " l.name AS location_name "
            + " from ( "
            + "SELECT "
            + "    pp.patient_id, "
            + "    ps.start_date AS data_transferido_para "
            + "FROM "
            + "    patient_program pp "
            + "JOIN patient_state ps ON ps.patient_program_id = pp.patient_program_id "
            + "JOIN ( "
            + "    SELECT "
            + "        pg.patient_id, "
            + "        MAX(ps.start_date) AS max_data_transferido_para "
            + "    FROM "
            + "        patient_program pg "
            + "    JOIN patient_state ps ON ps.patient_program_id = pg.patient_program_id "
            + "    WHERE "
            + "        pg.voided = 0 "
            + "        AND ps.voided = 0 "
            + "        AND pg.program_id = 2 "
            + "        AND pg.location_id=:location "
            + "        AND ps.start_date <= :endDate "
            + "        AND ps.end_date is null "
            + "    GROUP BY "
            + "        pg.patient_id "
            + ") latest ON latest.patient_id = pp.patient_id AND ps.start_date = latest.max_data_transferido_para "
            + "WHERE "
            + "    pp.voided = 0 "
            + "    AND ps.voided = 0 "
            + "    AND pp.program_id = 2 "
            + "    AND pp.location_id=:location "
            + "    AND ps.state = 7 "
            + "	AND ps.start_date <= :endDate "
            + "    AND ps.end_date is null "
            + ") transferido_para "
            + "left join "
            + "( "
            + "Select p.patient_id, max(e.encounter_datetime) encounter_datetime from  patient p "
            + "inner join encounter e on p.patient_id = e.patient_id "
            + "where p.voided = 0 and e.voided = 0 and e.encounter_type in(6,9) and e.location_id=:location "
            + "AND e.encounter_datetime between :startDate AND :endDate "
            + "group by p.patient_id "
            + ") seguimento on seguimento.patient_id = transferido_para.patient_id "
            + " "
            + "left join "
            + "( "
            + "select pid1.* from patient_identifier pid1 "
            + "inner join "
            + "( "
            + "select patient_id,min(patient_identifier_id) id from patient_identifier "
            + "where voided=0 "
            + "group by patient_id "
            + ") pid2 "
            + "where pid1.patient_id=pid2.patient_id and pid1.patient_identifier_id=pid2.id "
            + ") pid on pid.patient_id=transferido_para.patient_id "
            + "left join "
            + "( "
            + "select pn1.* from person_name pn1 "
            + "inner join "
            + "( "
            + "select person_id,min(person_name_id) id from person_name "
            + "where voided=0 "
            + "group by person_id "
            + ") pn2 "
            + "where pn1.person_id=pn2.person_id and pn1.person_name_id=pn2.id "
            + ") pn on pn.person_id=transferido_para.patient_id "
            + "left join "
            + "( "
            + "SELECT "
            + "    latest_state.patient_id, "
            + "    ps_final.start_date, "
            + "    ps_final.state "
            + "FROM ( "
            + "    SELECT "
            + "        pg.patient_id, "
            + "        MAX(ps.start_date) AS max_start_date "
            + "    FROM patient p "
            + "    INNER JOIN patient_program pg ON p.patient_id = pg.patient_id "
            + "    INNER JOIN patient_state ps ON pg.patient_program_id = ps.patient_program_id "
            + "    WHERE "
            + "        p.voided = 0 "
            + "        AND pg.voided = 0 "
            + "        AND ps.voided = 0 "
            + "        AND pg.program_id = 2 "
            + "        AND pg.location_id=:location "
            + "        AND ps.start_date <= :endDate "
            + "    GROUP BY pg.patient_id "
            + ") latest_state "
            + "INNER JOIN patient_program pg ON pg.patient_id = latest_state.patient_id "
            + "INNER JOIN patient_state ps_final ON ps_final.patient_program_id = pg.patient_program_id "
            + "    AND ps_final.start_date = latest_state.max_start_date "
            + "WHERE "
            + "    pg.voided = 0 "
            + "    AND pg.program_id = 2 "
            + "    AND pg.location_id=:location "
            + "    AND ps_final.voided = 0 "
            + ") AS ps ON transferido_para.patient_id = ps.patient_id "
            + "    inner join person pe on pe.person_id=transferido_para.patient_id "
            + "    left join  patient_program pg ON transferido_para.patient_id = pg.patient_id and pg.program_id = 2 "
            + "    left join encounter Seguimento on Seguimento.patient_id=seguimento.patient_id and Seguimento.encounter_datetime=seguimento.encounter_datetime and Seguimento.encounter_type in(6,9) "
            + "    left join location l on l.location_id=pid.location_id "
            + "    where (seguimento.encounter_datetime>transferido_para.data_transferido_para) "
            + "    group by transferido_para.patient_id "
            + ") f_ec7 ";
    return query;
  }
}
