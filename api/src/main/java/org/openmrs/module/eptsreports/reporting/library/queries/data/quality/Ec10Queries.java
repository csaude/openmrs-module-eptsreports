/*
 * The contents of this file are subject to the OpenMRS Public License
 * Version 1.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://license.openmrs.org
 *
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
 * License for the specific language governing rights and limitations
 * under the License.
 *
 * Copyright (C) OpenMRS, LLC.  All Rights Reserved.
 */
package org.openmrs.module.eptsreports.reporting.library.queries.data.quality;

public class Ec10Queries {
  /**
   * Get the query to be used to display the EC10 patient listing
   *
   * @return String
   */
  public static String getEc10CombinedQuery() {
    String query =
        " SELECT pe.person_id As patient_id, "
            + "pid.identifier AS NID, "
            + "concat(ifnull(pn.given_name,''),' ',ifnull(pn.middle_name,''),' ',ifnull(pn.family_name,'')) AS Name, "
            + "DATE_FORMAT(pe.birthdate, '%d-%m-%Y') AS birthdate, "
            + "IF(pe.birthdate_estimated = 1, 'Sim','NÃ£o') AS Estimated_dob, "
            + "pe.gender AS Sex, "
            + "DATE_FORMAT(pe.date_created, '%d-%m-%Y') AS First_entry_date, "
            + "DATE_FORMAT(pe.date_changed, '%d-%m-%Y') AS Last_updated, "
            + "DATE_FORMAT(pg.date_enrolled, '%d-%m-%Y') AS date_enrolled, "
            + " case "
            + " when ps.state = 9 then 'ABANDONO' "
            + " when ps.state = 6 then 'ACTIVO NO PROGRAMA' "
            + " when ps.state = 10 then 'OBITOU' "
            + " when ps.state = 8 then 'SUSPENDER TRATAMENTO' "
            + " when ps.state = 7 then 'TRANSFERIDO PARA' "
            + " when ps.state = 29 then 'TRANSFERIDO DE' "
            + "end AS state, "
            + "DATE_FORMAT(ps.start_date, '%d-%m-%Y') AS state_date, "
            + "DATE_FORMAT(consultation.encounter_datetime, '%d-%m-%Y') AS encounter_date, "
            + "DATE_FORMAT(enc.date_created, '%d-%m-%Y') AS encounter_date_created, "
            + "l.name AS location_name "
            + "FROM ( "
            + " "
            + "        SELECT "
            + "            pp.patient_id, "
            + "            ps.start_date AS data_abandono "
            + "        FROM "
            + "            patient_program pp "
            + "        JOIN patient_state ps ON ps.patient_program_id = pp.patient_program_id "
            + "        JOIN ( "
            + "            SELECT "
            + "                pg.patient_id, "
            + "                MAX(ps.start_date) AS data_abandono "
            + "            FROM "
            + "                patient_program pg "
            + "            JOIN patient_state ps ON ps.patient_program_id = pg.patient_program_id "
            + "            WHERE "
            + "                pg.voided = 0 "
            + "                AND ps.voided = 0 "
            + "                AND pg.program_id = 2 "
            + "                AND pg.location_id=:location "
            + "                AND ps.start_date <= :endDate "
            + "                AND ps.end_date IS NULL "
            + "            GROUP BY pg.patient_id "
            + "        ) latest ON latest.patient_id = pp.patient_id AND ps.start_date = latest.data_abandono "
            + "        WHERE "
            + "            pp.voided = 0 "
            + "            AND ps.voided = 0 "
            + "            AND pp.program_id = 2 "
            + "            AND pp.location_id=:location "
            + "            AND ps.state = 9 "
            + "            AND ps.start_date <= :endDate "
            + "            AND ps.end_date IS NULL "
            + "    ) AS abandoned "
            + " "
            + "    LEFT JOIN ( "
            + "        SELECT "
            + "            p.patient_id, "
            + "            MAX(e.encounter_datetime) AS encounter_datetime "
            + "        FROM patient p "
            + "        INNER JOIN encounter e ON p.patient_id = e.patient_id "
            + "        WHERE "
            + "            p.voided = 0 "
            + "            AND e.voided = 0 "
            + "            AND e.encounter_type = 18 "
            + "            AND e.location_id=:location "
            + "            AND e.encounter_datetime BETWEEN :startDate AND :endDate "
            + "        GROUP BY p.patient_id "
            + "    ) AS consultation ON consultation.patient_id = abandoned.patient_id "
            + " "
            + "    LEFT JOIN encounter enc ON enc.patient_id = consultation.patient_id "
            + "        AND enc.encounter_datetime = consultation.encounter_datetime "
            + "        AND enc.encounter_type in(6,9) "
            + " "
            + "    LEFT JOIN ( "
            + "        SELECT pid1.* "
            + "        FROM patient_identifier pid1 "
            + "        INNER JOIN ( "
            + "            SELECT patient_id, MIN(patient_identifier_id) AS id "
            + "            FROM patient_identifier "
            + "            WHERE voided = 0 "
            + "            GROUP BY patient_id "
            + "        ) pid2 ON pid1.patient_id = pid2.patient_id AND pid1.patient_identifier_id = pid2.id "
            + "    ) AS pid ON pid.patient_id = abandoned.patient_id "
            + " "
            + "    LEFT JOIN ( "
            + "        SELECT pn1.* "
            + "        FROM person_name pn1 "
            + "        INNER JOIN ( "
            + "            SELECT person_id, MIN(person_name_id) AS id "
            + "            FROM person_name "
            + "            WHERE voided = 0 "
            + "            GROUP BY person_id "
            + "        ) pn2 ON pn1.person_id = pn2.person_id AND pn1.person_name_id = pn2.id "
            + "    ) AS pn ON pn.person_id = abandoned.patient_id "
            + " "
            + "    LEFT JOIN ( "
            + "        SELECT "
            + "            latest_state.patient_id, "
            + "            ps_final.start_date, "
            + "            ps_final.state "
            + "        FROM ( "
            + "            SELECT "
            + "                pg.patient_id, "
            + "                MAX(ps.start_date) AS max_start_date "
            + "            FROM "
            + "                patient_program pg "
            + "            INNER JOIN patient_state ps ON pg.patient_program_id = ps.patient_program_id "
            + "            WHERE "
            + "                pg.voided = 0 "
            + "                AND ps.voided = 0 "
            + "                AND pg.program_id = 2 "
            + "                AND pg.location_id=:location "
            + "                AND ps.start_date <= :endDate "
            + "            GROUP BY pg.patient_id "
            + "        ) latest_state "
            + "        INNER JOIN patient_program pg ON pg.patient_id = latest_state.patient_id "
            + "        INNER JOIN patient_state ps_final ON ps_final.patient_program_id = pg.patient_program_id "
            + "            AND ps_final.start_date = latest_state.max_start_date "
            + "        WHERE "
            + "            pg.voided = 0 "
            + "            AND pg.program_id = 2 "
            + "            AND pg.location_id=:location "
            + "            AND ps_final.voided = 0 "
            + "    ) AS ps ON ps.patient_id = abandoned.patient_id "
            + "    INNER JOIN person pe ON pe.person_id = abandoned.patient_id "
            + "    LEFT JOIN location l ON l.location_id = pid.location_id "
            + "    LEFT JOIN  patient_program pg ON abandoned.patient_id = pg.patient_id and pg.program_id = 2 "
            + "    WHERE "
            + "        consultation.encounter_datetime > abandoned.data_abandono "
            + "    GROUP BY "
            + "        abandoned.patient_id ";
    return query;
  }
}
